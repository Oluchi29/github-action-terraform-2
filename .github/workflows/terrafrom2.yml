name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: select terraform action
        options:
        - apply
        - destroy
        required: true
  push:
    branches: [ "main" ]

jobs:
  terraform:
    name: 'Terraform'
    env:
      # AWS secrets
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEVOPS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{secrets.DEVOPSSECRET}}

    runs-on: ubuntu-latest
    environment: production

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: 'Install TFLint'
      run: |
        curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
        unzip tflint.zip -d /usr/local/bin/
        tflint --version

    - name: 'Install tfsec'
      run: |
        curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
        chmod +x tfsec
        mv tfsec /usr/local/bin/
        tfsec --version  

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.3
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: '.'
        tf_actions_comment: true
        args: '-var="instance_type=t2.medium"'
    
    - name: Terraform plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.3
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: '.'
        tf_actions_comment: true
        args: '-var="instance_type=t2.medium"'
      
    - name: Terraform apply
      if: ${{ github.event.inputs.terraform_action == 'apply' }}
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.3
        tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
        tf_actions_working_dir: '.'
        tf_actions_comment: true
        args: '-auto-approve -var="instance_type=t2.medium"'
    
    - name: Terraform destroy
      if: ${{ github.event.inputs.terraform_action == 'destroy' }}
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.3
        tf_actions_subcommand: ${{ github.event.inputs.terraform_action }}
        tf_actions_working_dir: '.'
        tf_actions_comment: true
        args: '-auto-approve -var="instance_type=t2.medium"'